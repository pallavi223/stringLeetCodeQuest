Input: pattern = "abba", s = "dog cat cat dog"
Output: true


class Solution {
public:
    bool wordPattern(string pattern, string s) {
        
      //logic for removing space and converting string into words vector
      vector<string> v;
      string temp = "";
      for(int i=0;i<s.size(); i++){
          if(s[i] == ' '){
              v.push_back(temp);
              temp = "";
          }
          else{
              temp += s[i];
          }
      }
      v.push_back(temp);

      //check if leng pattern is equal to len of string
      if(v.size() != pattern.size()){
          return false;
      }
      unordered_map<char,string> m;
      set<string> st;

      for(int i=0;i<pattern.size();i++){
          if(m.find(pattern[i]) != m.end()){
             if(m[pattern[i]] != v[i]){
                 return false;
             }
          }
          else{
              //if words is repetaed
              if(st.count(v[i]) > 0){
                  return false;
              }
              m[pattern[i]] = v[i];
              st.insert(v[i]);
          }

      }

     return true; 

    }
};
